import random
import os

def create_key():
    #this function creates a simple ceasar cipher key for the file. it generates 6 random digits to function as a key, which would aid in the cipher.
    key = random.randint(0,9999999999)
    return str(key)

def encrypt(string, key):
    result = ""
    #depending on the position of the character, the letter will get moved up and down certain amount. 
    for i in range(len(string)):
        char = string[i]
        if char.isupper():
            result += chr((ord(char) + int(key) - 65) % 26 + 65)
        elif char.isalpha():
            result += chr((ord(char) + int(key) - 97) % 26 + 97)
        else:
            result += char
    return result

def decrypt(string, keys):
    #this function decrypts a given string, given the key. it is basically the reverse of the encrypt function
    return encrypt(string, 26 - int(keys))

def save_dictionary_to_file(dict):
    #this function saves the dictionary to a file 
    #rewrites the entire file
    f = open("dictionary_file.txt", "w")
    f.write(str(dict))
    f.close

def load_dictionary_from_file():
    #this function will load the dictionary from a file
    #if the file does not exist, make the file, if not extract the string and evaluate it
    if os.path.exists("dictionary_file.txt") == False:
        f = open("dictionary_file.txt", "w")
        f.write("{}")
        data = f.read()
        f.close()
        return eval(data)
    else:
        f = open('dictionary_file.txt','rt')
        data = f.read()
        if (data == ""):
            f = open('dictionary_file.txt', 'w')
            f.write("{}")
            f = open('dictionary_file.txt', 'rt')
            data = f.read()
        f.close()
        return eval(data)

def clear():
    #this function helps clear the screen (it doesnt work lol)
    # for windows
    if os.name == 'nt':
        _ = os.system('cls')
  
    # for mac and linux(here, os.name is 'posix'
    else:
        _ = os.system('clear')

#main
#password_storage is the main storage dictionary
password_storage = load_dictionary_from_file()
fail_state = True
while (fail_state == True):
    clear()
    user_input_filename = input("Enter a filename: ")
    user_input_filename = user_input_filename + ".txt"
    if user_input_filename not in password_storage:
        temp_str = input("File not found. Make new file? ")
        temp_str = temp_str.upper()
        if temp_str == "Y":
            file_password = input("Enter a user password: ")
            file_key = create_key();
            file_dict = {"password" : file_password, "key" : file_key}
            password_storage[user_input_filename] = file_dict
            file = open(user_input_filename, "x")
            save_dictionary_to_file(password_storage)
            print("File successfully created. ")
            continue
        elif temp_str == "N":
            continue
    else:
        user_input_password = input("Enter a password: ")
        user_wrong_count = 0;
        if password_storage[user_input_filename]["password"] != user_input_password:
            user_wrong_count += 1;
            if user_wrong_count == 3:
                quit()
        elif password_storage[user_input_filename]["password"] == user_input_password:
            fail_state = False;
            clear()
            f = open(user_input_filename, "rt");
            file_key = password_storage[user_input_filename]["key"]
            if f.read() != '':
               file_content = f.read()
               print(decrypt(file_content, file_key))
               f.close()
            user_input = input("\n\nWhat do you want to do today? w/d: ")
            user_input = user_input.upper();
            if (user_input == "W"):
              f = open(user_input_filename, "a")
              while (True):
                  value = input()
                  value = encrypt(value, file_key)
                  f.write(value)
                  f.write("\n")
                  if (value == ""):
                      f.close()
                      break;
                  save_dictionary_to_file(password_storage)
            if (user_input == "D"):
              os.remove(user_input_filename)
              password_storage.pop(user_input_filename)
              save_dictionary_to_file(password_storage)
