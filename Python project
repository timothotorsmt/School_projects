"""
Hello this is the code file for the Python ICA 2. Our project aims to create a password file system. 

String: Passcode, data handling

"""
import random
import pickle

def to_string(n):
    #this function converts integers to string, with the correct formatting for the key
    #if n is less than 10, it will be 0n. If n is more than 10, it will simply show up as n.
    if (n < 10 and n >= 0):
        return ("0" + str(n))
    else:
       return str(n)

def create_key():
    #this function creates a simple ceasar cipher key for the file. it generates 6 random digits to function as a key, which would aid in the cipher.
    key1 = random.randint(0,25)
    key2 = random.randint(0,25)
    key3 = random.randint(0,25)
    finalkey = to_string(key1) + to_string(key2) + to_string(key3)
    return str(finalkey)

def encrypt(string, key):
    #this function encrypts a given string and a key. it is not a secure way of decrypting the code, which can theoretically be hacked in less than a day.
    #the given key is made into 3 different substrings. 
    key = str(key)
    key1 = int(key[:2])
    key1 = 0 - key1
    key2 = int(key[2:4])
    key2 = 0 - key2
    key3 = int(key[4:])
    key3 = 0 - key3
    result = ""
    #depending on the position of the character, the letter will get moved up and down certain amount. 
    for i in range(len(string)):
        char = string[i]
        
        if (i % 2 == 0):
            result += chr(ord(char) + int(key1))
        elif(i % 3 == 0):
            result += chr(ord(char) + int(key2))
        else:
            result += chr(ord(char) + int(key3))

    return result

def decrypt(string, key):
    #this function decrypts a given string, given the key. it is basically the reverse of the encrypt function
    key = str(key)
    key1 = int(key[:2])
    key2 = int(key[2:4])
    key3 = int(key[4:])
    result = ""
    for i in range(len(string)):
        char = string[i]
       
        if (i % 2 == 0):
            result += chr(ord(char) + int(key1))
        elif(i % 3 == 0):
            result += chr(ord(char) + int(key2))
        else:
            result += chr(ord(char) + int(key3))
    return result


#main loop
is_done = False
password_storage = {}
while (is_done != True):
    filepass = False;
    while (True):
        user_input_filename = input("Enter a file name: ")
        temp = str(user_input_filename) + ".txt"
        if user_input_filename not in password_storage:
            print("File not found. Make new file?")
            temp_user_input = input("supposed to be buttons but Y/N: ")
            temp_user_input = temp_user_input.upper()
            if temp_user_input == "Y":
                password = input("Please enter a password: ")
                temp_key = create_key()
                user_dict = {"password" : password, "key": temp_key}
                password_storage[user_input_filename] = user_dict
                f = open(temp, "x")
                continue
            elif temp_user_input == "N":
                continue
        elif user_input_filename in password_storage:
            file_dict = password_storage.get(user_input_filename)
            file_key = file_dict.get("key")
            file_password = file_dict.get("password")
            while (True):
                temp_user_input = input("Enter password: ")
                strikes = 0
                if str(temp_user_input) == file_password:
                    temp_user_input = input("what do u want to do? 1/2/3")
                    if temp_user_input == "1":
                        f = open(temp, "r")
                        temp_line = f.read()
                        temp_line = decrypt(temp_line, file_key)
                        print(temp_line)
                    elif temp_user_input == "2":
                        f = open(temp, "w")
                        temp_user_input = input("Write here: ")
                        temp_user_input = encrypt(temp_user_input, file_key)
                        f.write(temp_user_input)
                        f.close()
                    elif temp_user_input == "3":
                        f = open(temp, "a")
                        temp_user_input = input("Write here: ")
                        temp_user_input = encrypt(temp_user_input, file_key)
                        f.append(temp_user_input)
                        f.close()
                else:
                    strikes += 1
                    if strikes == 3:
                        quit
        password_file = open("password_file", 'w')
        password_file.write(str(password_storage))
        password_file.close()
    
